@page "/"

@using DataAccess
@using DataAccess.Models
@using RemoteLabBlazerApp.Models

@inject IComputerData _db
@inject IJSRuntime JSRuntime


<h2 style="margin:20px 0;">Get a computer</h2>

<button class="btn btn-primary" @onclick="OnButtonPress" style="margin:20px 0;">Search</button>

@if (computers is null)
{
    <p><em>Loading...</em></p>
}

else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>RDP Link:</th>
            </tr>
        </thead>
        <tbody>
            @if (buttonPress == 1)
            {
                if (selectedComputer is null)
                {
                    <tr>
                        <td>No computers are avaliable</td>
                    </tr>

                }
                else
                {
                    <tr>
                        <td>
                            <button @onclick="DownloadFile">
                                @selectedComputer.FQDN
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td>   </td>
                </tr>

            }
        </tbody>
    </table>
}

@code {
    private List<ComputerModel> computers;

    private int buttonPress = 0;

    private ComputerModel selectedComputer;


    protected override async Task OnInitializedAsync()
    {
        computers = await _db.GetComputer();
    }


    private async Task OnButtonPress()
    {
        foreach (var computer in computers)
        {
            if (computer.RDPStatus == "Free")
            {
                selectedComputer = computer;
                selectedComputer.RDPStatus = "Occupied";

                await _db.UpdateComputer(selectedComputer);

                await OnInitializedAsync();

                break;
            }
        }
        buttonPress = 1;

    }

    private async Task DownloadFile()
    {
        var text = "full address: s:" + selectedComputer.FQDN;
        var bytes = System.Text.Encoding.UTF8.GetBytes(text);

        await JSRuntime.InvokeVoidAsync("saveAsFile", "Computer.rdp", bytes);
    }

}



